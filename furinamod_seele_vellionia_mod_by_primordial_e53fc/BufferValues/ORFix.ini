namespace = global\ORFix
; Version 0.9
; Global 3.0+ character reflection/outline color fix
; Anime Game Modding Group discord server (https://discord.gg/agmg)
; silentnightsound, modder4869, leotorrez, takoyaki.desu, hummyr, sinsofseven

; To use this reflection/outline color shader fix: 
; 1) Place this ini into 3Dmigoto Mods folder, and under the BufferValues folder if available
; 2) At the bottom of each modded [TextureOverride {Character} {ObjectPart}], type the following command:

; run = CommandList\global\ORFix\ORFix

; Example:
; [TextureOverrideLaylaHead]
; hash = b617aa07
; match_first_index = 0
; ib = ResourceLaylaHeadIB
; ps-t0 = ResourceLaylaHeadDiffuse
; ps-t1 = ResourceLaylaHeadLightMap
; run = CommandList\global\ORFix\ORFix

; Variables ------------------------------------------
[Constants]
	global $active = 0	

[Present]
	post $active = 0	

; Commandlists ---------------------------------------
[CommandListORFix]
	$active = 1
	ResourceRefDiffuse = reference ps-t1
	ResourceRefLightmap = reference ps-t2

[CommandListReflectionFix]
	ps-t0 = reference ResourceRefDiffuse
	drawindexed=auto
	ResourceRefDiffuse = null
	$active = 0

[CommandListOutlineFix]
	ps-t1 = reference ResourceRefLightmap
	drawindexed=auto
	ResourceRefLightmap = null
	$active = 0

; Shaders --------------------------------------------
[ShaderRegexCharReflection]
	if $active == 1
		shader_model = ps_5_0
		run = CommandListReflectionFix
	endif

[ShaderRegexCharReflection.pattern]
	mul r\d+\.\w+, r\d+\.\w+,[^.]*\.\w+\n
	mad o\d+\.\w+, r\d+\.\w+, cb\d+\[\d+\]\.\w+, r\d+\.\w+\n
	mov o\d+\.\w+, l\(\d+\.\d+\)\n

; [ShaderRegexCharOutline]
; if $active == 1
; 	shader_model = ps_5_0
; 	run = CommandListOutlineFix
; endif

; [ShaderRegexCharOutline.pattern]
; ne r\d\.\w+, l\(-?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+\), -?cb\d\[\d+\]\.\w+\n
; add r\d\.\w+, v\d\.\w+, l\(-?\d*\.?\d+\)\n
; lt r\d\.\w+, r\d\.\w+, l\(-?\d*\.?\d+\)\n
; and r\d\.\w+, r\d\.\w+, r\d\.\w+\n
; discard_nz r\d\.\w+\n
; ne r\d\.\w+, l\(-?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+\), -?cb\d\[\d+\]\.\w+\n
; if_nz[\s\S]+^endif\n
; sample_indexable\(texture\dd\)\(float,float,float,float\) r\d\.\w+, v\d\.\w+, t\d\.\w+, s\d\n
; eq r\d\.\w+, -?cb\d\[\d+\]\.\w+, l\(-?\d*\.?\d+\)\n
; add r\d\.\w+, r\d\.\w+, -?cb\d\[\d+\]\.\w+\n
; lt r\d\.\w+, r\d\.\w+, l\(-?\d*\.?\d+\)\n
; and r\d\.\w+, r\d\.\w+, r\d\.\w+\n
; discard_nz r\d\.\w+\n
; (?:(?:ne r\d\.\w+, l\(-?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+\), -?cb\d\[\d+\]\.\w+\n)+(?:or r\d\.\w+, r\d\.\w+, r\d\.\w+\n)*)+
; if_nz[\s\S]+^endif\n
; ne r\d\.\w+, l\(-?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+\), -?cb\d\[\d+\]\.\w+\n
; mul r\d\.\w+, -?cb\d\[\d+\]\.\w+, l\(-?\d*\.?\d+\)\n
; movc o\d\.\w+, r\d\.\w+, r\d\.\w+, r\d\.\w+\n
; mad o\d\.\w+, v\d\.\w+, l\(-?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+\), l\(-?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+\)\n
; (?:mov o\d\.\w+, l\(-?\d*\.?\d+\)\n
; mov o\d\.\w+, r\d\.\w+\n)+
; (?:mov o\d\.\w+, -?cb\d\[\d+\]\.\w+\n
; mov o\d\.\w+, l\(-?\d*\.?\d+\)\n)+

[ResourceRefDiffuse]
[ResourceRefLightmap]

;Plan B if regex breaks

[ShaderOverrideOutline]
	hash = e795de98764fb2b9
	allow_duplicate_hash=overrule
	if $active == 1
		run = CommandListOutlineFix
	endif